import re
import requests  #https://www.freecodecamp.org/news/how-to-get-location-information-of-ip-address-using-python/
from pysafebrowsing import SafeBrowsing
import time

def get_location(ip):
    ip_address = ip
    get_req = requests.get(f'http://ip-api.com/json/{ip}')
    if int(get_req.headers['X-Rl']) < 2:
        time.sleep(int(get_req.headers['X-Ttl'])+5)
    response = get_req.json()
    location_data = {
        "query": ip_address,
        "status": response.get("status"),
        "region": response.get("region"),
        "country": response.get("country")
    }
    return location_data, f"Requests Left: {int(get_req.headers['X-Rl'])}" ,f"Time to live: {int(get_req.headers['X-Ttl'])}"

def ip_lister(file):
    f = open(file,"r")
    ip_list = list() #list of ips in file

    for line in f:
        split_line = line.split()
        for ip in split_line:
            x = re.search("^(?:[0-9]{1,3}\.){3}[0-9]{1,3}$",ip) #IPv4 regex
            if x:
                if ip not in ip_list:
                    ip_list.append(ip) 
            else:
                continue
    return ip_list

def ip_country(ip_list):
    country_counter = {}
    for ips in ip_list:
        location = get_location(ips)
        country = location[0]["country"]
        print(ips,location[1],location[2])
        if country not in country_counter:
            country_counter[country] = 1
        else:
            country_counter[country] = 1 + country_counter[country]

    return country_counter 


def safebrowser(ip_list):
    my_key = "AIzaSyC38tw4yKknr1vsfOOF4zuc5rog38CcQHA" #my api key from google
    s = SafeBrowsing(my_key)
    r = s.lookup_urls(ip_list) #a dictionary that contains info on the list of IPs
    for i in r:
        if r[i]["malicious"] == True:
            return "MALICIOUS IP FOUND"
        else:
            return "SAFE"


LAMP_1 = ip_lister("backup_files/LAMP/auth.log") #Feb 12 19:12:41 - Feb 13 00:55:05
LAMP_2 = ip_lister("backup_files/LAMP/auth.log.1") #Feb  9 20:25:17 - Feb 12 19:12:39
LAMP_total = list(set(LAMP_1).union(LAMP_2))
#LAMP_country = ip_country(LAMP_total)
# LAMP_safebrowser = safebrowser(LAMP_total)
#print(LAMP_country)
#print(len(LAMP_total))


"""
LAMP Stack
Total IPs: 41

Country Breakdown:
{'United States': 12, 'South Korea': 7, 'Egypt': 2, None: 1, 'Italy': 2, 'Taiwan': 4, 'Malaysia': 1, 'Poland': 1, 'Japan': 1, 'Brazil': 1, 'China': 4, 'India': 2, 'Portugal': 1, 'United Kingdom': 1, 'Turkey': 1}

"""


#MEAN_1 = ip_lister("backup_files/MEAN/auth.log") #Feb 12 19:12:41 - Feb 13 01:59:19
#MEAN_2 = ip_lister("backup_files/MEAN/auth.log.1") #Feb  8 21:13:08 - Feb 12 19:12:39
#MEAN_total = list(set(MEAN_1).union(MEAN_2))
MEAN_total = ['221.159.206.62', '136.160.90.42', '64.62.197.50', '114.34.175.145', '138.186.145.154', '211.224.92.7', '112.185.120.208', '218.151.24.14', '59.126.214.15', '167.94.145.59', '222.223.208.5', '59.22.201.194', '153.161.199.124', '177.9.183.233', '66.170.210.97', '220.94.33.31', '183.101.106.169', '18.206.107.29', '14.38.149.171', '67.249.38.160', '205.210.31.25', '36.233.237.180', '183.104.211.19', '114.33.239.203', '61.85.199.241', '18.206.107.27', '190.161.177.32', '205.210.31.140', '220.135.66.213', '49.48.147.132', '31.0.216.121', '114.35.105.44', '88.248.161.156', '136.160.90.53', '118.232.12.146', '121.158.13.33', '59.15.138.118', '118.150.172.132', '82.66.3.241', '80.116.152.103', '18.206.107.28', '114.24.208.54', '100.37.46.95', '114.35.75.182', '134.209.19.200', '49.213.188.163', '186.220.233.58', '220.84.234.193', '114.33.7.78', '45.79.181.104', '36.135.25.2', '121.150.14.172', '121.161.214.119', '125.74.239.20', '201.20.56.106', '45.79.181.251', '167.94.138.118', '73.77.210.65', '59.126.191.49', '205.210.31.26', '162.243.146.29', '107.170.242.11', '220.133.89.165', '189.222.194.254', '114.34.174.23', '90.189.168.72', '198.199.96.173', '119.194.94.9', '59.23.58.176', '222.99.27.132', '121.184.140.183', '111.2.69.175', '123.193.154.30', '209.141.53.90', '180.94.169.167', '24.241.2.38', '211.248.232.60', '146.90.93.17', '31.44.159.169', '0.0.0.0', '103.54.41.197', '45.79.128.205', '43.243.215.243', '134.122.48.53', '181.48.125.177', '115.135.189.5', '125.229.3.16', '70.68.241.219', '220.134.100.207', '107.150.99.137', '125.137.209.111', '187.33.202.7', '120.132.122.54', '59.126.118.177']
# print(len(MEAN_total))
# MEAN_country = ip_country(MEAN_total)
#print(MEAN_country)
#MEAN_safebrowser = safebrowser(MEAN_total)
#print(MEAN_safebrowser)

"""
MEAN Stack
Total IPs: 94

Country Breakdown:
{'South Korea': 21, 'United States': 23, 'Taiwan': 19, 'Brazil': 5, 'Germany': 1, 'China': 5, 'Japan': 1, 'Chile': 1, 'Thailand': 1, 'Poland': 1, 'Turkey': 1, 'France': 1, 'Italy': 1, 'United Kingdom': 2, 'Mexico': 1, 'Russia': 1, 'Macao': 1, 'Spain': 1, None: 1, 'Bangladesh': 1, 'India': 1, 'Netherlands': 1, 'Colombia': 1, 'Malaysia': 1, 'Canada': 1}

"""

LEMP_1 = ip_lister("backup_files/LEMP/auth.log") #Feb 11 18:47:06 - Feb 13 01:00:11
#LEMP_country = ip_country(LEMP_1)
# LEMP_safebrowser = safebrowser(LEMP_1)


"""
LEMP Stack
Total IPs: 20

Country Breakdown:
{None: 1, 'South Korea': 5, 'Taiwan': 6, 'United States': 3, 'Hong Kong': 1, 'United Kingdom': 1, 'Vietnam': 1, 'China': 1, 'Germany': 1}
"""
print(set(LAMP_total).intersection(LEMP_1))